generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum TokenStatus {
  APPROVED
  UNKNOWN
  DISAPPROVED
}

model Token {
  id       String      @id // chainId:address
  address  String
  chainId  Int
  name     String
  symbol   String
  decimals Int
  status   TokenStatus @default(UNKNOWN)

  derivedUSD Decimal?
  derivedNative Decimal?

  generatedAt DateTime @default(now())
  updatedAt   DateTime @updatedAt

  pools0 Pool[] @relation("token0")
  pools1 Pool[] @relation("token1")

  @@unique([chainId, address])
  @@index(fields: [id])
  @@index(fields: [address])
  @@index(fields: [chainId])
  @@index(fields: [address, chainId])
}

model Pool {
  id       String @id // chainId:address
  address  String
  name     String
  chainId  Int
  protocol String
  version  String
  type     String
  token0   Token  @relation("token0", fields: [chainId, token0Id], references: [chainId, address])
  token0Id String
  token1   Token  @relation("token1", fields: [chainId, token1Id], references: [chainId, address])
  token1Id String

  swapFee      Float
  twapEnabled  Boolean
  reserve0     String @default("0")
  reserve1     String @default("0")
  liquidityUSD Decimal // liquidity in USD

  generatedAt DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([chainId, address])
  @@index(fields: [id])
  @@index(fields: [address])
  @@index(fields: [chainId, protocol, token0Id, token1Id])
  @@index(fields: [chainId, protocol, version, type])
  @@index(fields: [chainId, token0Id])
  @@index(fields: [chainId, token1Id])
}
