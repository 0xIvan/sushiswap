generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Token {
  id       String   @id // chainId_address
  address  String
  chainId  String
  name     String
  symbol   String
  decimals Int

  generatedAt    DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  priceUpdatedAt DateTime?

  pools0     Pool[]      @relation("token0")
  pools1     Pool[]      @relation("token1")

  @@unique([chainId, address])
  @@index(fields: [id])
  @@index(fields: [address, chainId, name])
  @@index(fields: [address, chainId, symbol])
}

model Pool {
  id       String @id // chainId_address
  address  String
  name     String
  chainId  String
  protocol String
  version  String
  type     String
  token0   Token  @relation("token0", fields: [chainId, token0Id], references: [chainId, address])
  token0Id String
  token1   Token  @relation("token1", fields: [chainId, token1Id], references: [chainId, address])
  token1Id String

  swapFee     Float?
  twapEnabled Boolean?

  reserve0        String // Liquidity of token0
  reserve1        String // Liquidity of token1 
  totalSupply     String // Liquidity, Total supply of all LP in this pool
  liquidityUSD    Decimal // liquidity in USD

  createdAtBlockNumber BigInt @db.UnsignedBigInt
  generatedAt          DateTime @default(now())
  updatedAt            DateTime @updatedAt

  // TODO: add more composite indexes once we have decided which queries we'll need

  @@unique([chainId, address])
  @@index(fields: [id])
  @@index(fields: [id, token0Id, token1Id])
  @@index(fields: [chainId, token0Id])
  @@index(fields: [chainId, token1Id])
}
