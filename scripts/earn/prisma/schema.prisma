generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("EARN_DATABASE_URL")
  relationMode = "prisma"
}

model Token {
  id          String      @id // chainId_address
  address     String
  chainId     String
  name        String
  symbol      String
  decimals    Int
  generatedAt DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  pools0      Pool[]      @relation("token0")
  pools1      Pool[]      @relation("token1")
  incentives  Incentive[]

  @@unique([chainId, address])
  @@index(fields: [id])
  @@index(fields: [address])
  @@index(fields: [chainId])
  @@index(fields: [address, chainId])
}

model Pool {
  id                   String      @id // chainId_address
  address              String
  name                 String
  chainId              String
  version              String
  type                 String
  token0               Token       @relation("token0", fields: [token0Id], references: [id])
  token0Id             String
  token1               Token       @relation("token1", fields: [token1Id], references: [id])
  token1Id             String
  swapFee              Float?
  twapEnabled          Boolean?
  reserve0             String // Liquidity of token0
  reserve1             String // Liquidity of token1 
  totalSupply          String // Liquidity, Total supply of all LP in this pool
  liquidityUSD         Decimal // liquidity in USD
  liquidityNative      Decimal // liquidity in native
  volumeUSD            Decimal // volume in USD
  volumeNative         Decimal // volume in native
  token0Price          String
  token1Price          String
  apr                  Float?
  totalApr             Float?
  isIncentivized       Boolean     @default(false)
  incentives           Incentive[]
  volume1d             Decimal?
  fees1d               Decimal?
  volume1w             Decimal?
  fees1w               Decimal?
  createdAtBlockNumber BigInt      @db.UnsignedBigInt
  isBlacklisted        Boolean     @default(false)
  generatedAt          DateTime    @default(now())
  updatedAt            DateTime    @updatedAt

  @@index(fields: [id])
  @@index(fields: [chainId])
  @@index(fields: [address])
  @@index(fields: [chainId, version, type])
  @@index(fields: [liquidityUSD, chainId, isBlacklisted])
  @@index(fields: [token0Id])
  @@index(fields: [token1Id])
  @@index(fields: [generatedAt])
}

model Incentive {
  id              String @id // poolAddress_rewarderAddress
  chainId         String
  type            String
  apr             Float
  rewarderAddress String
  rewardPerDay    Float
  rewardToken     Token  @relation(fields: [rewardTokenId], references: [id])
  rewardTokenId   String
  pool            Pool   @relation(fields: [poolId], references: [id])
  poolId          String

  @@index(fields: [id])
  @@index(fields: [poolId])
  @@index(fields: [rewardTokenId])
  @@index(fields: [chainId, rewardTokenId])
}
