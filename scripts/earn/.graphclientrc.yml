sources:
  - name: Trident
    handler:
      graphql:
        endpoint: https://{context.host:api.thegraph.com}/{context.path:subgraphs/name}/{context.name:sushi-qa/trident-optimism}
    transforms:
      - autoPagination:
          validateSchema: true
  - name: Exchange
    handler:
      graphql:
        endpoint: https://{context.host:api.thegraph.com}/{context.path:subgraphs/name}/{context.name:sushi-graph/sushiswap-ethereum}
    transforms:
      - autoPagination:
          validateSchema: true
      - filterSchema:
          mode: wrap
          filters:
            - Type.!{Factory}
  - name: MasterChef
    handler:
      graphql:
        endpoint: https://api.thegraph.com/subgraphs/name/sushiswap/masterchef-v2-ethereum
    transforms:
      - prefix:
          value: MasterChef_
          includeRootOperations: true
          includeTypes: true
  - name: MiniChef
    handler:
      graphql:
        endpoint: https://{context.host:api.thegraph.com/subgraphs/name}/{context.name:jiro-ono/minichef-staging-updates}
    transforms:
      - prefix:
          value: MiniChef_
          includeRootOperations: true
          includeTypes: true
  - name: Blocks
    handler:
      graphql:
        endpoint: https://{context.subgraphHost:api.thegraph.com/subgraphs/name}/{context.subgraphName:blocklytics/ethereum-blocks}
        retry: 3

additionalTypeDefs: |
  # Type Extensions
  extend type Block {
    chainId: Int!
  }
  # Query Extensions
  extend type Query {
    blocksByChainIds(
      skip: Int = 0
      first: Int = 100
      where: Block_filter
      orderBy: Block_orderBy
      orderDirection: OrderDirection
      chainIds: [Int!]!
    ): [Block!]!
    oneDayBlocks(
      skip: Int = 0
      first: Int = 100
      chainIds: [Int!]!
    ): [Block!]!
    twoDayBlocks(
      skip: Int = 0
      first: Int = 100
      chainIds: [Int!]!
    ): [Block!]!
    oneWeekBlocks(
      skip: Int = 0
      first: Int = 100
      chainIds: [Int!]!
    ): [Block!]!
    customBlocks(
      skip: Int = 0
      first: Int = 100
      timestamp: Int!
      chainIds: [Int!]!
    ): [Block!]!
  }

additionalResolvers:
  - ./resolvers/index.js
documents:
  - ./query.graphql

codegen:
  contextType: 'MeshContext & { chainId: string; subgraphName: string; subgraphHost: string }'

